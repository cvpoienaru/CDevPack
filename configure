#!/bin/bash

# Copyright (c) 2016, Codrin-Victor Poienaru <cvpoienaru@gmail.com>.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# This software is provided by the copyright holders and contributors "as is"
# and any express or implied warranties, including, but not limited to, the
# implied warranties of merchantability and fitness for a particular purpose are
# disclaimed. In no event shall the copyright holder or contributors be liable
# for any direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute goods or
# services; loss of use, data, or profits; or business interruption) however
# caused and on any theory of liability, whether in contract, strict liability,
# or tort (including negligence or otherwise) arising in any way out of the use
# of this software, even if advised of the possibility of such damage.

# Project tree structure ...
export CDP_ROOT=~/Work/Projects/CDevPack
export CDP_BIN=$CDP_ROOT/bin
export CDP_ETC=$CDP_ROOT/etc
export CDP_INCLUDE=$CDP_ROOT/include
export CDP_LIB=$CDP_ROOT/lib
export CDP_SCRIPT=$CDP_ROOT/script
export CDP_SRC=$CDP_ROOT/src

# Project tree permission mask ...
export CDP_MASK=0022

# Project build options ...
export CDP_DEBUG=true
export CDP_MAKE_PATH=$CDP_SRC/Makefile
export CDP_BUILD_THREADS=$(cat /proc/cpuinfo | awk '/^processor/{print $3}' \
	| wc -l)
if $CDP_DEBUG; then
	export CDP_FLAGS=-g
fi

# Environment paths ...
export C_INCLUDE_PATH=$CDP_INCLUDE
export LIBRARY_PATH=$CDP_LIB
export LD_LIBRARY_PATH=$CDP_LIB
export PATH=$PATH:$CDP_BIN

# Set custom project tree permission mask.
umask $CDP_MASK

# Creates the missing directories from the project tree structure.
function __cdp_make_directory_structure()
{
	mkdir -p $CDP_BIN
	mkdir -p $CDP_LIB
}

# Removes unneeded directories from the project tree structure.
function __cdp_clean_directory_structure()
{
	rm -rf $CDP_BIN
	rm -rf $CDP_LIB
}

# Builds the project binaries and/or libraries from source.
# $1 makefile - The makefile to be used for building.
function __cdp_make_build()
{
	if [[ $# -ne 1 ]]; then
		echo -e "Error: Cannot make build. No makefile was supplied."
		return
	fi

	make -f $1 -j $CDP_BUILD_THREADS
}

# Cleans the project binaries and/or libraries.
# $1 makefile - The makefile to be used for cleaning.
function __cdp_clean_build()
{
	if [[ $# -ne 1 ]]; then
		echo -e "Error: Cannot clean build. No makefile was supplied."
		return
	fi

	make -f $1
}

# Builds or cleans the project binaries and/or libraries according to the
# specified options.
# $1 option - Specifies whether we should build or clean the project binaries
# and libraries.
function cdp_build()
{
	if [[ $# -ne 1 ]]; then
		echo -e "Error: Call with --build|-b or --clean|-c."
		return
	fi

	case $1 in
		--build|-b)
			__cdp_make_directory_structure
			__cdp_make_build $CDP_MAKE_PATH
		;;

		--clean|-c)
			__cdp_clean_directory_structure
			__cdp_clean_build $CDP_MAKE_PATH
		;;

		*)
			echo "Error: Unknown option '$1'."
		;;
	esac
}
